import selenium
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from webdriver_manager.chrome import ChromeDriverManager
from PyQt5 import QtCore, QtGui, QtWidgets

from bs4 import BeautifulSoup as bs
import requests
import pyperclip
import time

driver = webdriver.Chrome(ChromeDriverManager().install())
driver.maximize_window()

# 변수 목록
naver_url = 'http://naver.com'
id = ''
pw = ''
keyword = '서이추'
msg = '''안녕하세요 :) 
호랑이띠 아기와 함께하는 육아블로그 운영하고 있어용 
이웃님 글 통해서 알게 되어 서이추 신청하고 갑니당! 
답방은 꼭 가요 함께 소통해요❤'''

# msg = '''안녕하세요 이제 막 블로그를 개설한 블린이 입니다. 
# 서이추 하고 가요 ~ 앞으로 서로 블로그 구경하면서 소통해요 ~ 
# 감사합니다 !!'''

# msg = '..'

title = ''
name = '' 
link = '' 
cnt = 0
#user_url = 'https://blog.naver.com/qlcsk1129/222963596523'
#[blog_id, log_no] = user_url.replace('https://blog.naver.com/', '').split('/')
#sympathy_url = 'https://m.blog.naver.com/SympathyHistoryList.naver?blogId=' + blog_id + '&logNo=' + log_no + '&categoryId=POST'

def count(num):
    if num == 1 :
        cnt = 0
    else:
        cnt += 1
# 네이버 로그인
def login():
    # 네이버 url로 이동
    driver.get(naver_url)
    
    # 로그인 버튼 클릭
    time.sleep(1) 
    driver.find_element_by_id('account').click()
    time.sleep(1) 

    # id 복사 붙여넣기
    driver.find_element_by_id('id').click()
    pyperclip.copy(id)      # id copy
    driver.find_element_by_id('id').send_keys(Keys.CONTROL, 'v')        # ctrl + v key 입력
    time.sleep(1)                                                       # delay 1sec

    # pw 복사 붙여넣기
    driver.find_element_by_id('pw').click()
    pyperclip.copy(pw)      # pw copy
    driver.find_element_by_id('pw').send_keys(Keys.CONTROL, 'v')        # ctrl + v key 입력
    time.sleep(1)                                                       # delay 1sec

    # 로그인 버튼 클릭
    driver.find_element_by_id('log.login').click()
    time.sleep(1)
    
    # count(1)
    return 1


# 블로그 탭 이동
def gotoblogtap():
    driver.find_element_by_xpath('//*[@id="NM_FAVORITE"]/div[1]/ul[1]/li[3]/a').click()
    
    return 1

# 키워드 검색

def serchtokeyword():
    driver.find_element_by_xpath('//*[@id="header"]/div[1]/div/div[2]/form/fieldset/div/input').send_keys(keyword, Keys.ENTER)
    time.sleep(1)
    driver.find_element_by_xpath('//*[@id="content"]/section/div[1]/div[2]/div/div/a/i').click()        #기간 목록 클릭
    time.sleep(1)
    driver.find_element_by_xpath('//*[@id="content"]/section/div[1]/div[2]/div/div/div/a[2]').click()       #최근 1주 클릭
    time.sleep(1)
    return 1

def subneighbor():
    num = 0
    popupwindow = 0
    listcnt = ''
    blogindex =  driver.find_element_by_class_name('area_list_search')
    bloglist =  blogindex.find_elements_by_class_name('list_search_post')

    for list_search_post in bloglist :
        desc = list_search_post.find_element_by_class_name('desc')
        title = desc.find_element_by_class_name('title')
        atag = desc.find_element_by_tag_name('a')
        link = atag.get_attribute('href')
        name = list_search_post.find_element_by_class_name('name_author')
        
        print('-----------------------------------------------------------------------')
        print('title : ', title.text)
        print('name : ', name.text)
        print('link : ', link)
        
        # 새 창 띄우고 수집한 블로그 링크로 이동
        driver.execute_script('window.open("https://naver.com");')
        driver.switch_to.window(driver.window_handles[-1])
        driver.get(link)
        time.sleep(0.7)
                
        # 이웃 신청 
        driver.switch_to.frame('mainFrame')
        
        try :
            driver.find_element_by_link_text('이웃추가')
            driver.find_element_by_link_text('이웃추가').click() #이웃 추가 버튼 클릭
            driver.implicitly_wait(3)   
            
            try :
                driver.switch_to.window(driver.window_handles[2])
                window_dec = driver.window_handles
                print (window_dec)
                            
            except :
                time.sleep(1.5)
                driver.switch_to.window(driver.window_handles[2])

            # 서로 이웃 추가 버튼 활성화 되어있으면 신청 flow
            if driver.find_element_by_xpath('//*[@id="content"]/div/form/fieldset/div[1]/h1'):
                if driver.find_element_by_xpath('//*[@id="each_buddy_add"]').is_enabled():
                    driver.find_element_by_xpath('//*[@id="content"]/div/form/fieldset/div[2]/div[1]/p/span[2]/label').click()        # 서로이웃으로 신청 라디오 버튼 클릭
                    time.sleep(0.7)
                    driver.find_element_by_xpath('//*[@id="content"]/div/form/fieldset/div[3]/a[2]').click()        # 다음 클릭
                    time.sleep(0.7)
                    
                    window_dec = driver.window_handles
                    print (window_dec)
  

                    pyperclip.copy(msg)
                    driver.find_element_by_xpath('//*[@id="message"]').send_keys(Keys.CONTROL, 'v')     # 이웃 신청 메세지 입력
                    time.sleep(0.7)
                    driver.find_element_by_xpath('/html/body/form/div/div/fieldset/div[3]/a[2]').click()
                        
                    driver.close()
                    driver.switch_to.window(driver.window_handles[1])
                    time.sleep(0.7)
                    driver.close()
                    print('서로 이웃 신청이 완료 되었습니다.' + '+' )
                    num += 1
                    print('+' + '+' + str(num))


                 
                    driver.switch_to.window(driver.window_handles[0])
        
                    return 1

def nextpage(num):
    if num == 11 :
        driver.find_element_by_class_name('button_next').click()

    else :
        print(str(num))
        pagecmd =  '//*[@id="content"]/section/div[3]/span[' + str(num) + ']/a'
        print(pagecmd)
        driver.find_element_by_xpath(pagecmd).click()    
        
def nextbtnclick(num):
    if num > 0 :
        for i in range(1, num + 1):
            driver.find_element_by_class_name('button_next').click()
            time.sleep(0.7)

def selectpage(num):
    pagecmd =  '//*[@id="content"]/section/div[3]/span[' + str(num) + ']/a'
    print(pagecmd)
    driver.find_element_by_xpath(pagecmd).click()    
            

main()
